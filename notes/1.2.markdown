Now with _More Immutable_ and _Fewer Exceptionism_...

* `grizzled.config.Configuration` is now completely immutable. Specifically,
  the following changes have been made:
  - Explicit conversion methods (e.g., `getInt()`, `getBoolean()`) have
    been removed, in favor of new `asOpt[T]()` and `asEither[T]()` methods.
    These new methods take an implicit `ValueConverter` object, allowing
    callers to specify their own type conversions. Some predefined converters
    are available in the `grizzled.config.Configuration.Implicits` package.
  - It is now possible to specify a "not found" handler, when constructing
    a `Configuration` object, to handle cases where an option was not found.
  - The `Configuration` class is now final, because the constructor is now
    private.
  - All `Configuration` objects must be instantiated through the companion
    `Configuration` object.
  - All methods throwing exceptions have either been deprecated or removed.
    Implication: Non-safe configuration objects (i.e., those that throw
    exceptions for variables that cannot be substituted) are not supported.
    However, `asEither()` will properly handle that situation.
  - Most exceptions have been removed, except those still thrown by deprecated
    methods.
* `grizzled.string.util.stringToBoolean()` is deprecated, as it throws an
  exception. Use the new `str2Boolean()` instead; it returns an `Either`.
* Removed exceptions from `grizzled.string.StringTemplate`. The `substitute()`
  method is now deprecated (because it throws exceptions) in favor of the
  `sub()` method (which returns an `Either`).
* `grizzled.url.download()` now returns an `Either`, instead of throwing an
  exception on error.
* The functions in `grizzled.file.util` and the methods in
  `grizzled.file.GrizzledFile` now return `Either`, instead of throwing
  exceptions.
* Implicits in the `grizzled.net.IPAddress` class are now in a special
  `grizzled.net.Implicits` object.
